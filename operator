###########################
# 算术运算符
# 加法运算符
result1 = 1 + 2
print(result1)
result2 = '1' + '2'
print(result2)
result3 = [1, 2, 3, 4] + [4, 5, 6, 7]
print(result3)

# 减法运算符
#
# 乘法运算符
#
# 幂运算符
result4 = 2 ** 3
print(result4)
# 除法运算符
#
# 整除运算符
result5 = 10 // 3
print(result5)
# 求余运算符
result6 = 10 % 6
print(result6)
#
# 赋值运算符
# 链式赋值
#
# 运算优先级同数学运算
#
# 整除与行列的应用场景
# 序号求行列

##################
# 复合运算符
#   +=  *=  -=  **=
num1 = 10
abc = num1 + 5
num1 = abc
print(num1)

num2 = 10
num2 = num2 + 5
print(num2)

num3 = 10
num3 += 5
print(num3)

num4 = 10
num4 *= 20
print(num4)

num5 = 10
num5 **= 3
print(num5)

##############################
# 比较运算符
# > < != <> >= <= == is 链状比较运算符
# ==判断是否相等
# <> 等同于 !=，适应于2.0版本，不适用于3.0
# id 查看唯一标识
# is 比对唯一标识
a = 10
b = 10
print(a == b)
print(id(a))
print(id(b))
print(a is b)
c = [1]
d = [1]
e = [2]
print(c == d)
print(c == e)
print(c is d)
print(c is e)
# 链式比较运算符就是数学中的连续比较，类似于区间
numa = 10
numb = 20
print(5 < numa < 15)
print(5 < numb < 15)

# 逻辑运算符
# not 非，取反
# and，与，并且，一假全假
# or，或，一真全真
# 注意
# 非零即真，非空即真
print(bool(1))
print(bool(0))
print(1 and True)
print(1 and False)
print(bool('0'))
print(bool(''))
# 逻辑表达式的结果不一定是布尔类型
print(0 and True)
print(1 or False)
print(True and 0)
print(True and 1)
# 可称为短路运算符
print(1 and 3)
print(1 or 3)
print(0 or 3)
